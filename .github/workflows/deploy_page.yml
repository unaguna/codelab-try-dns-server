name: Deploy Generated Codelabs to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
      DIST_DIR: ./dist
      INDEX_SRC_PATH: ./src/index.html
      HTTP_SCHEME: //
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
      - name: Setup claat
        run: go install github.com/googlecodelabs/tools/claat@latest
      - name: Make dist directory
        run: mkdir -p $DIST_DIR
      - name: Build by claat
        run: find src -name '*.md' | xargs claat export -auth 0 -o $DIST_DIR
      - name: Modify built dist
        run: ./tools/patch_dist.sh
      - name: Create index page
        if: ${{env.INDEX_SRC_PATH != ''}}
        run: go run ./tools/make_index.go
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: ${{env.DIST_DIR}}
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
